services:
  books_service:
    build: ./books_service
    container_name: books_service
    volumes:
      - ./books_service:/app
    depends_on:
       db:
        condition: service_healthy #added this condition
    #da vedere se servono
    environment:
      - DJANGO_SETTINGS_MODULE=books_project.settings
      - DATABASE_URL=postgres://bookline_user:password@db:5432/bookline_db
    ports:
      - "8001:8000"


  reservations_service:
    build: ./reservations_service
    container_name: reservations_service
    volumes:
      - ./reservations_service:/app
    depends_on:
       db:
        condition: service_healthy #added this condition
    environment:
      - DJANGO_SETTINGS_MODULE=reservations_project.settings
      - DATABASE_URL=postgres://bookline_user:password@db:5432/bookline_db
    ports:
      - "8002:8000"

  users_service:
    build: ./users_service
    container_name: users_service
    volumes:
      - ./users_service:/app
    depends_on:
      db:
      condition: service_healthy #added this condition
    environment:
      - DJANGO_SUPERUSER_EMAIL=admin@user.com
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_FIRST_NAME=Admin
      - DJANGO_SUPERUSER_LAST_NAME=User
      - DJANGO_SETTINGS_MODULE=users_project.settings
      - DATABASE_URL=postgres://bookline_user:password@db:5432/bookline_db
    ports:
      - "8003:8000"


  frontend:
    build: ./frontend
    container_name: bookline_frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true  # Enable polling for file changes
      - NODE_ENV=development

  db:
    image: postgres:latest
    container_name: bookline_db
    restart: always
    environment:
      POSTGRES_DB: bookline_db
      POSTGRES_USER: bookline_user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    #  added an health check for the db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookline_user -d bookline_db"]
      interval: 5s
      timeout: 5s
      retries: 5 
  pgadmin:
    build: ./pgadmin
    image: dpage/pgadmin4
    container_name: bookline_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bookline.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
      PGPASS_FILE: /var/lib/pgadmin/.pgpass
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
  pgadmin-data:
